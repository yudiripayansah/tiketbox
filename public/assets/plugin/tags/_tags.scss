// Add pseudo focus support
.form-control-focus {
  color: var(--bs-body-color, $input-focus-color);
  background-color: var(--bs-form-control-bg, var(--bs-body-bg, $input-focus-bg));
  border-color: $input-focus-border-color;
  outline: 0;
  @if $enable-shadows {
    @include box-shadow($input-box-shadow, $input-focus-box-shadow);
  } @else {
    // Avoid using mixin so we can pass custom focus shadow properly
    box-shadow: $input-focus-box-shadow;
  }
}

@each $state, $data in $form-validation-states {
  .was-validated :#{$state} + .form-control-focus {
    border-color: map-get($data, "color");
    box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba(map-get($data, "color"), $input-btn-focus-color-opacity);
  }
}

// Add pseudo placeholder support
.form-floating .form-control.form-placeholder-shown:not(.form-control-focus) ~ label {
  opacity: unset;
  transform: unset;
}

// Add pseudo disabled support
.form-control-disabled {
  background-color: var(--bs-form-control-disabled-bg, var(--bs-secondary-bg, $input-disabled-bg));
  opacity: 1;
}

// mark support
.tags-menu mark {
  text-decoration: underline;
  background: none;
  color: currentColor;
  padding: 0;
}
